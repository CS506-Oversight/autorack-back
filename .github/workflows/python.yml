name: CI

on: [ push ]

env:
  FLASK_APP: run
  FLASK_ENV: production
  FIREBASE_ACCOUNT_KEY: ${{ secrets.FIREBASE_ACCOUNT_KEY }}

  PSQL_VERSION: '13.2'
  PSQL_TEST_DB: 'testdb'
  PSQL_TEST_USER: 'test'
  PSQL_TEST_PASSWORD: 'test'

  SQLALCHEMY_DATABASE_URI: 'postgresql://test:test@localhost:5432/testdb'

jobs:
  quality-check:
    name: Code Quality Check

    runs-on: ubuntu-latest

    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.PSQL_VERSION }}
          postgresql db: ${{ env.PSQL_TEST_DB }}
          postgresql user: ${{ env.PSQL_TEST_USER }}
          postgresql password: ${{ env.PSQL_TEST_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required packages
        run: |
          pip install -r requirements-dev.txt

      - name: Setup database
        run: |
          flask db upgrade

      - name: pydocstyle checks (`app`)
        run: |
          pydocstyle app --count

      - name: pylint checks (`app`)
        run: |
          pylint app

  security-check:
    name: Code Security Check

    runs-on: ubuntu-latest

    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.PSQL_VERSION }}
          postgresql db: ${{ env.PSQL_TEST_DB }}
          postgresql user: ${{ env.PSQL_TEST_USER }}
          postgresql password: ${{ env.PSQL_TEST_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required packages
        run: |
          pip install -r requirements-dev.txt

      - name: Setup database
        run: |
          flask db upgrade

      - name: bandit checks (`app`)
        run: |
          bandit -r app

  tests:
    name: Tests

    runs-on: ubuntu-latest

    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.PSQL_VERSION }}
          postgresql db: ${{ env.PSQL_TEST_DB }}
          postgresql user: ${{ env.PSQL_TEST_USER }}
          postgresql password: ${{ env.PSQL_TEST_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required dev packages
        run: |
          pip install -r requirements-dev.txt

      - name: Setup database
        run: |
          flask db upgrade

      - name: Run tests
        run: |
          pytest --all

  coverage:
    name: Coverage

    runs-on: ubuntu-latest

    needs: [ tests ]

    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.PSQL_VERSION }}
          postgresql db: ${{ env.PSQL_TEST_DB }}
          postgresql user: ${{ env.PSQL_TEST_USER }}
          postgresql password: ${{ env.PSQL_TEST_PASSWORD }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install required dev packages
        run: |
          pip install -r requirements-dev.txt

      - name: Setup database
        run: |
          flask db upgrade

      - name: Generate Coverage database
        run: |
          coverage run -m pytest --all

      - name: Generate Coverage report
        run: |
          coverage xml

      - name: Send Coverage report
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: cobertura.xml
